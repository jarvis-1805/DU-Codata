$ swipl -s .\reverse.pl
Welcome to SWI-Prolog (threaded, 64 bits, version 8.4.1)
SWI-Prolog comes with ABSOLUTELY NO WARRANTY. This is free software.
Please run ?- license. for legal details.

For online help and background, visit https://www.swi-prolog.org
For built-in help, use ?- help(Topic). or ?- apropos(Word).

1 ?- reverse([1,2,3], W).
W = [3, 2, 1].

2 ?- trace.
true.

[trace] 2 ?- reverse([1,2,3], W).
   Call: (10) reverse([1, 2, 3], _11700) ? creep
   Call: (11) reverse([2, 3], _12930) ? creep
   Call: (12) reverse([3], _13686) ? creep
   Call: (13) reverse([], _14442) ? creep
   Exit: (13) reverse([], []) ? creep
   Call: (13) append([], [3], _13686) ? creep
   Exit: (13) append([], [3], [3]) ? creep
   Exit: (12) reverse([3], [3]) ? creep
   Call: (12) append([3], [2], _12930) ? creep
   Call: (13) append([], [2], _18996) ? creep
   Exit: (13) append([], [2], [2]) ? creep
   Exit: (12) append([3], [2], [3, 2]) ? creep
   Exit: (11) reverse([2, 3], [3, 2]) ? creep
   Call: (11) append([3, 2], [1], _11700) ? creep
   Call: (12) append([2], [1], _22794) ? creep
   Call: (13) append([], [1], _23558) ? creep
   Exit: (13) append([], [1], [1]) ? creep
   Exit: (12) append([2], [1], [2, 1]) ? creep
   Exit: (11) append([3, 2], [1], [3, 2, 1]) ? creep
   Exit: (10) reverse([1, 2, 3], [3, 2, 1]) ? creep
W = [3, 2, 1].
