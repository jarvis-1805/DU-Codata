/* [wxMaxima batch file version 1] [ DO NOT EDIT BY HAND! ]*/
/* [ Created with wxMaxima version 20.06.6 ] */
/* [wxMaxima: title   start ]
Practical-5: System of First 
Order Ordinary Differential
Equations
   [wxMaxima: title   end   ] */


/* [wxMaxima: input   start ] */
/*Case 1: Real and Distinct Roots*/
/*Q1 - Solve the system
x'=2x + 3y
y'=4x + 3y*/
kill(all)$
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
eq1:'diff(x(t),t,1)=2*x(t) + 3*y(t);
eq2:'diff(y(t),t,1)=4*x(t) + 3*y(t);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
/*Method 1 - Coeficient matrix*/
A:matrix([2,3],[4,3]);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
/*Eigenvalues and Eigenvectors*/
eigenvalues(A);
eigenvectors(A);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
/*The general solution for the case of 
real and distinct eigenvalues is
X = c1*K1*e^(r1*t) + c2*K2*e^(r2*t) 
where r1 and r2 are eigenvalues and
K1 and K2 are the eigenvectors*/
soln:[x,y]=c1*[1,4/3]*e^(6*t) + c2*[1,-1]*e^(-t);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
/*First numeric number denotes 
LHS(1) OR RHS(2) and second 
entry denotes the postion of 
element in the list*/
part(soln,1,1)=part(soln,2,1);
part(soln,1,2)=part(soln,2,2);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
/*Method 2 - Solving directly using 
desolve*/
desolve([eq1,eq2],[x(t),y(t)]);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
/*Q2 - Solve the system
x' = x - y + 8z
y' = 10y -2z
z' = 9z*/
kill(all);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
eq1:'diff(x(t),t)=x(t) - y(t) + 8*z(t);
eq2:'diff(y(t),t)=10*y(t) - 2*z(t);
eq3:'diff(z(t),t)= 9*z(t);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
/*Matrix Method*/
A:matrix([1,-1,8],[0,10,-2],[0,0,9]);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
eigenvalues(A);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
eigenvectors(A);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
soln:[x,y,z]=c1*[1,0,0]*e^(t) + 
c2*[1,8/3,4/3]*e^(9*t)+ 
c3*[1,-9,0]*e^(10*t);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
part(soln,1,1)=part(soln,2,1);
part(soln,1,2)=part(soln,2,2);
part(soln,1,3)=part(soln,2,3);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
/*desolve Method*/
desolve([eq1,eq2,eq3],[x(t),y(t),z(t)]);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
/*Q3 - Solve the system
y'' - 6y' + 5y = 0*/
kill(all)$
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
/*We use the following subsitution*/
/*x_1=y
x_2=(x_1)'*/
/*Therefore we get, (x_2)' - 6*(x_2) 
+ 5*(x_1) = 0
or, (x_2)' = 6*(x_2) - 5*(x_1)*/
/*and the system becomes*/
/*(x_1)' = x_2
(x_2)' =  6*(x_2) - 5*(x_1)*/
eq1:'diff(x1(t),t) = x2(t);
eq2:'diff(x2(t),t) =  6*x2(t) - 5*x1(t);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
/*Matrix Method*/
A:matrix([0,1],[-5,6]);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
eigenvalues(A);
eigenvectors(A);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
x1,x2];
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
part(soln,1,1)=part(soln,2,1);
part(soln,1,2)=part(soln,2,2);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
/*desolve Method*/
desolve([eq1,eq2],[x1(t),x2(t)]);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
kill(all);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
a:'diff(x(t),t,1)=9*x+y;
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
b:'diff(y(t),t,1)=3*x-2*y;
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
desolve([a,b],[x(t),y(t)]);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
f(x)=%e^x;
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
f(0);
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
f(x):= if (x > ((-%pi)/2) and x < (%pi)/2 ) then x^2 else 0;
/* [wxMaxima: input   end   ] */


/* [wxMaxima: input   start ] */
integrate(x^2,x,0,-1);
/* [wxMaxima: input   end   ] */



/* Old versions of Maxima abort on loading files that end in a comment. */
"Created with wxMaxima 20.06.6"$
